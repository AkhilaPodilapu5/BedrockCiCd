name: CI/CD Pipeline 

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  AWS_REGION: us-east-1  
  ECR_REPOSITORY: my-ecr-repo
  ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
  IMAGE_TAG: ${{ github.sha }}

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.7' 
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Build python app
        run: |
          python setup.py install
      - name: Build image
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .

  sca:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Run SCA scan
        uses: anchore/scan-action@v3
        id: scan
        with:
          image: "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          fail-build: false
          severity-cutoff: high

  artifactscan:
    needs: sca
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: image
          path: .        

      - name: Scan image for vulnerabilities
        uses: anchore/scan-action@v3
        with:
          image: "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          fail-build: false
          severity-cutoff: high
          
  deploy:
    needs: [build, sca, artifactscan]
    runs-on: ubuntu-latest
    
    steps:
    
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ env.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG