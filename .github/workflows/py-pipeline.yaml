name: CI

on: 
  workflow_dispatch:

jobs:

  sca:
    name: SCA
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run SCA scan
      uses: anchore/scan-action@v3
      with:
        image: "docker.io/anchore/anchore-engine:latest"
        acs-report-enable: true

  build:
    name: Build
    needs: sca  
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r pythonapp/requirements.txt
    - name: Build
      run: |
        python pythonapp/setup.py sdist bdist_wheel
    - uses: actions/upload-artifact@v3
      with:
        name: dist
        path: ./dist

  artifactscan:
    name: Artifact Scan  
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
    - name: Scan artifacts
      uses: anchore/scan-action@v3
      with:
        path: "./dist/*"
        acs-report-enable: true

  sast:
    name: SAST
    needs: artifactscan
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run SAST scan
      uses: anchore/scan-action@v3
      with:
        path: "."
        acs-report-enable: true
        severity-cutoff: high

  build-and-push-docker-image:
    name: Build and Push Docker Image
    needs: sast
    runs-on: ubuntu-latest
    env:
      ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
      ECR_REPOSITORY: my-ecr-repo
      IMAGE_TAG: ${{ github.sha }}
    steps:
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG