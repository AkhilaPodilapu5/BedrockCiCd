name: CI

on: 
  workflow_dispatch:

jobs:

  sca:
    name: SCA
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run SCA
        uses: anchore/scan-action@v3
        with:
          image: "docker.io/anchore/anchore-engine:latest"
          acs-report-enable: true

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9' 

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r pythonapp/requirements.txt
          
      - name: Build
        run: |
          python -m build --sdist --outdir dist ./pythonapp

  artifactscan:  
    name: Artifact Scan
    runs-on: ubuntu-latest
    steps:   
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Scan artifacts
        uses: anchore/scan-action@v3
        with:
          image: "docker.io/anchore/anchore-engine:latest"
          acs-report-enable: true
          severity-cutoff: critical
          
  sast:
    name: SAST
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code 
        uses: actions/checkout@v3

      - name: Run SAST
        uses: anchore/scan-action@v6
        with:
          path: "."
          fail-build: false
          acs-report-enable: true

  docker:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          role-session-name: GitHubActions

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: my-ecr-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG