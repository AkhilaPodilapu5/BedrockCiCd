name: CI/CD Pipeline

on: 
  workflow_dispatch:

jobs:

  sca:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run SCA scan
      uses: anchore/scan-action@v3
      with:
        image: "docker.io/anchore/anchore-engine:latest"
        acs-report-enable: true

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9' 
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r pythonapp/requirements.txt
    - name: Build
      run: |
        python pythonapp/build.py
        
  artifactscan:
    needs: build
    runs-on: ubuntu-latest
    steps:    
    - uses: actions/checkout@v3
    - name: Scan artifacts
      uses: anchore/scan-action@v3
      with:
        path: "."
        acs-report-enable: true

  sast:
    needs: build  
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run SAST scan
      uses: anchore/scan-action@v3
      with:
        path: "."
        acs-report-enable: true
        severity-cutoff: high
        
  deploy:
    needs: [sca, artifactscan, sast]
    runs-on: ubuntu-latest
    steps:
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: my-ecr-repo
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG