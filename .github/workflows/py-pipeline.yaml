name: CI

on: 
  workflow_dispatch:

jobs:

  sca:
    name: Scan source code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run SCA scan
        uses: anchore/scan-action@v3
        with:
          path: "."
          fail-build: false

  build:
    name: Build application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9' 

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r pythonapp/requirements.txt
          
      - name: Build application
        run: |
          python pythonapp/build.py
          zip -r build.zip build/
          
  artifactscan:
    name: Scan build artifacts
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: build
          path: build

      - name: Scan build artifacts
        uses: anchore/scan-action@v3
        with:
          path: "build/*"
          fail-build: false
          
  sast:
    name: Static analysis
    needs: build  
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Run SAST scan
        uses: anchore/scan-action@v3
        with:
          path: "."
          fail-build: false
          
  deploy:
    name: Deploy to ECR
    needs: [sca, build, artifactscan, sast]
    runs-on: ubuntu-latest
    env:
      ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
      ECR_REPOSITORY: myapp
      IMAGE_TAG: ${{ github.sha }}
      
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        role-session-name: GitHubActions
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG