name: CI/CD Pipeline

on:
  workflow_dispatch:

env:
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  ECR_REPOSITORY: my-ecr-repo
  IMAGE_TAG: ${{ github.sha }}
  CLUSTER_NAME: my-eks-cluster
  AWS_REGION: us-west-2

jobs:

  sca:
    name: SCA
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run SCA
        uses: anchore/scan-action@v3
        with:
          image: "docker.io/anchore/anchore-engine:latest"
          acs-report-enable: true

  build:
    name: Build
    needs: sca
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.7' 

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r pythonapp/requirements.txt
          
      - name: Build
        run: |
          python pythonapp/setup.py sdist bdist_wheel
          
  artifactscan:
    name: Artifact Scan  
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist
          
      - name: Scan artifacts
        uses: anchore/scan-action@v3
        with:
          path: "./dist"
          acs-report-enable: true
          
  sast:
    name: SAST
    needs: artifactscan  
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Run SAST
        uses: anchore/scan-action@v3
        with:
          path: "."
          acs-report-enable: true
          
  dast:
    name: DAST
    needs: deploy
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Run DAST
        uses: anchore/scan-action@v3
        with:
          image: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          acs-report-enable: true
          severity-cutoff: high
          
  deploy:
    name: Deploy
    needs: sast
    runs-on: ubuntu-latest
    
    steps:
    
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          
      - name: Save Kubernetes context
        run: |
          aws eks --region ${{ env.AWS_REGION }} update-kubeconfig --name ${{ env.CLUSTER_NAME }}
          kubectl config view --raw > kubeconfig.yaml
          
      - name: Upload kubeconfig file
        uses: actions/upload-artifact@v3
        with:
          name: kubeconfig
          path: kubeconfig.yaml
          
      - name: Deploy to EKS
        env:
          KUBECONFIG_FILE: ./kubeconfig.yaml  
        run: |
          kubectl apply -f deployment.yaml