name: CI/CD Pipeline

on:
  workflow_dispatch:

env:
  ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
  ECR_REPOSITORY: my-ecr-repo
  IMAGE_TAG: ${{ github.sha }}
  CLUSTER_NAME: my-eks-cluster
  AWS_REGION: us-west-2

jobs:

  sca:
    name: SCA
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run SCA scan
        uses: anchore/scan-action@v3
        
  build:
    name: Build
    needs: sca
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          
  artifactscan:
    name: Artifact Scan
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Scan image in ECR with Anchore
        uses: anchore/scan-action@v3
        with:
          image: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          fail-build: false
          acs-report-enable: true

  sast:
    name: SAST
    needs: build  
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Run SAST
        uses: anchore/scan-action@v3
        with:
          path: "."
          fail-build: false
          acs-report-enable: true

  dast:
    name: DAST
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run DAST
        uses: anchore/scan-action@v3
        with:
          image: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          fail-build: false
          acs-report-enable: true
          severity-cutoff: high

  deploy:
    name: Deploy
    needs: [artifactscan, sast]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Save Kubernetes context
        id: save-context
        uses: aws-actions/amazon-eks-save-context@v1
        with:
          cluster-name: ${{ env.CLUSTER_NAME }}
          role-arn: ${{ secrets.AWS_ROLE_ARN }}

      - name: Download context
        uses: aws-actions/amazon-eks-load-context@v1
        with:
          path: ${{ steps.save-context.outputs.kubeconfig_path }}

      - name: Deploy to EKS
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          kubectl set image deployment/my-deployment my-container=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
