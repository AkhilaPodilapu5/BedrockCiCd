name: CI

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r pythonapp/requirements.txt
    - name: Build
      run: |
        cd pythonapp
        python setup.py build

  sca:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Run SCA
      uses: anchore/scan-action@v3
      with:
        image: "docker.io/anchore/anchore-engine:latest"
        acs-report-enable: true

  artifactscan:

    runs-on: ubuntu-latest

    steps:    
    - uses: actions/checkout@v2
    - name: Run Artifact Scan
      uses: anchore/scan-action@v3
      with:
        image: "docker.io/anchore/anchore-engine:latest"
        acs-report-enable: true
        severity-cutoff: high
        fail-build: false

  deploy:

    runs-on: ubuntu-latest
    
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: my-ecr-repo
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG