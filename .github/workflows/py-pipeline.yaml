name: CI/CD Pipeline

on:
  workflow_dispatch:

env:
  AWS_REGION: us-east-1  
  ECR_REPOSITORY: my-ecr-repo
  EKS_CLUSTER: my-eks-cluster

jobs:

  sca:
    name: SCA Scan
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run SCA scan
      uses: anchore/scan-action@v3
      
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r pythonapp/requirements.txt
    - name: Build
      run: |
        python pythonapp/setup.py sdist bdist_wheel
        
  artifactscan:
    name: Artifact Scan  
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist
    - name: Scan artifacts
      uses: anchore/scan-action@v3
      with:
        path: ${{ github.workspace }}/dist
        fail-build: false  
        
  sast:
    name: SAST Scan
    needs: build  
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Run SAST scan
      uses: anchore/scan-action@v3
      with:
        path: "."
        fail-build: false
        
  dast:
    name: DAST Scan
    needs: build
    runs-on: ubuntu-latest
    steps:    
    - uses: actions/checkout@v3
    - name: Run DAST scan
      uses: anchore/scan-action@v3
      with:
        path: "."
        fail-build: false
        
  build-and-push-image:
    name: Build & Push Docker Image
    needs: [sca, artifactscan, sast, dast]
    runs-on: ubuntu-latest
    steps:
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        
  deploy:
    name: Deploy to EKS
    needs: build-and-push-image
    runs-on: ubuntu-latest
    steps:
    
    - name: Configure Kubernetes credentials
      run: | 
        aws eks --region ${{ env.AWS_REGION }} update-kubeconfig --name ${{ env.EKS_CLUSTER }}
        kubectl config view --raw > kubeconfig.yaml
        
    - name: Save Kubernetes config
      uses: actions/upload-artifact@v3
      with:
        name: kubeconfig
        path: kubeconfig.yaml
        
    - name: Deploy to EKS
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}  
      run: |
        kubectl apply -f deploy.yaml
        kubectl set image deployment/mydeployment myapp=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG