name: CI

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.7' 
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Build
      run: |
        python setup.py build
        
  sca:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Run SCA
      uses: anchore/scan-action@v2
      with:
        image: "anchore/inline-scan:latest"
        fail-build: false
        severity-cutoff: high
        acs-report-enable: true

  sast:

    runs-on: ubuntu-latest

    steps:    
    - uses: actions/checkout@v2
    - name: Run SAST
      uses: anchore/scan-action@v2
      with:
        image: "anchore/inline-scan:latest"
        fail-build: false
        severity-cutoff: high
        acs-report-enable: true
        overrides: |
          {
            "scan_types": ["os","package","language","files","vuln"]
          }

  artifactscan:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Run Artifact Scanning
      uses: anchore/scan-action@v2
      with:
        image: "anchore/inline-scan:latest"
        fail-build: false
        severity-cutoff: high
        acs-report-enable: true
        overrides: |
          {
            "scan_types": ["artifact"]
          }
          
  build-and-push-image:
  
    runs-on: ubuntu-latest
    
    env:
      ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
      ECR_REPOSITORY: my-ecr-repo
      IMAGE_TAG: ${{ github.sha }}
    
    steps:
    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
